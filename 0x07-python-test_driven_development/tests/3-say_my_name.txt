``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Kelvin", "Mabonga")
    My name is Kelvin Mabonga

::

    >>> say_my_name("Kelvin Simiyu", "Mabonga II")
    My name is Kelvin Simiyu Mabonga II

The parameter ```last_name``` is optional. If no last name is provided,
an empty string is printed instead.

::

    >>> say_my_name("Kelvin")
    My name is Kelvin 

Invalid Names
=============

The parameters ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.

::

    >>> say_my_name(2, "Mabonga")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Kelvin", ["James", "Simiyu", "Mabonga"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"Kelvin": 4, "Simiyu": 12}, 6.9)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

At least one name must be provided.

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
